// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
id                String      @id @default(cuid())
photoUrl String
  telegramName      String
  telegramUsername  String   @unique
  danaNumber        String
  danaName          String
  balance           Float    @default(0.0)
  todayAdViews      Int      @default(0)
  totalAdViews      Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  lastAdViewDate    String?  // Tambahkan ini

  withdrawals       Withdrawal[]

  @@map("users")
}

model Withdrawal {
id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  amount        Float
  remainingBalance Float
  status        WithdrawalStatus @default(PENDING)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("withdrawals")
}

enum WithdrawalStatus {
  PENDING
  PROCESSING
  SUCCESS
  FAILED
}